plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'//扩展插件
    id 'kotlin-kapt'
    // 神策应用 com.sensorsdata.analytics.android 插件
    id 'com.sensorsdata.analytics.android'
    id 'org.greenrobot.greendao' // apply plugin
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"

        //添加如下配置-Canary 8注解报错
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }
    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
        debug {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false" //不显示log
            signingConfig signingConfigs.release
            // Zipalign优化
            zipAlignEnabled true

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            signingConfig signingConfigs.debug
            // Zipalign优化
            zipAlignEnabled false

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    productFlavors {
        //开发环境
        develop {
            buildConfigField "int", "ENV_TYPE", "1"
            applicationId rootProject.ext.android.applicationId
            manifestPlaceholders = [
                    app_name           : "dev-家",
                    app_icon           : "@mipmap/ic_launcher",
                    UMENG_CHANNEL_VALUE: "dev"
            ]
        }
        //uat测试环境
        check {
            buildConfigField "int", "ENV_TYPE", "2"
            applicationId rootProject.ext.android.applicationId
            manifestPlaceholders = [
                    app_name           : "uat-家",
                    app_icon           : "@mipmap/ic_launcher",
                    UMENG_CHANNEL_VALUE: "uat"
            ]
        }
        //生产环境
        product {
            buildConfigField "int", "ENV_TYPE", "3"
            applicationId rootProject.ext.android.applicationId
            manifestPlaceholders = [
                    app_name           : "家",
                    app_icon           : "@mipmap/ic_launcher",
                    UMENG_CHANNEL_VALUE: "product"
            ]
        }
    }
    // 自定义输出配置
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "xcloudKt_v${variant.versionName}_${variant.name}.apk"
        }
    }
}
greendao {
    // 指定数据库schema版本号，迁移等操作会用到
    schemaVersion 1
    // 设置生成数据库文件的目录，默认是在build中，可以将生成的文件放到我们的java目录中
    targetGenDir 'src/main/java'
    // 设置生成的数据库相关文件的包名
    daoPackage 'com.example.xcloudkt'
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Support库
    implementation rootProject.ext.supportLibs
    // 网络请求库
    implementation rootProject.ext.networkLibs
    // RxJava2
    implementation rootProject.ext.rxJavaLibs
    // eventBus
    implementation rootProject.ext.eventBusLibs
    // RefreshLayout
    implementation rootProject.ext.RefreshLayoutLibs
    // glide
    implementation rootProject.ext.glideLibs
    implementation rootProject.ext.glideTransformationsLibs
    kapt rootProject.ext.glideCompiler
    // 添加 Sensors Analytics SDK 依赖
    implementation 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:4.0.9'
    //banner
    implementation 'cn.bingoogolapple:bga-banner:3.0.0@aar'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'org.greenrobot:greendao:3.3.0' // add library
}